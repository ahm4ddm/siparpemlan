/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SistemParkirFilkomUB;

import static SistemParkirFilkomUB.Sistem.dataParkirArrayList;
import java.util.HashSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahm4d
 */
public class formParkir extends javax.swing.JFrame {
    
    Sistem varLok = new Sistem();
    
    /**
     * Creates new form add
     */
    public formParkir() {
        initComponents();
        Sistem.inisialisasiDataParkir();
        menampilkanData();
        bt_update.setVisible(false);
        bt_del.setVisible(false);
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg_blue = new javax.swing.JPanel();
        bt_add = new javax.swing.JButton();
        bt_update = new javax.swing.JButton();
        bt_del = new javax.swing.JButton();
        bt_logout = new javax.swing.JButton();
        bt_exit = new javax.swing.JButton();
        bt_minimaze = new javax.swing.JButton();
        lbnopar = new javax.swing.JLabel();
        innopar = new javax.swing.JTextField();
        lbnopol = new javax.swing.JLabel();
        innopol = new javax.swing.JTextField();
        lbmanufak = new javax.swing.JLabel();
        inmanufaktur = new javax.swing.JTextField();
        lbjenis = new javax.swing.JLabel();
        injenis = new javax.swing.JTextField();
        lbwarna = new javax.swing.JLabel();
        inwarna = new javax.swing.JTextField();
        lbtransmisi = new javax.swing.JLabel();
        intransmisi = new javax.swing.JTextField();
        lbharga = new javax.swing.JLabel();
        inharga = new javax.swing.JTextField();
        lbstatus = new javax.swing.JLabel();
        instatus = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tampilanTabelDataParkir = new javax.swing.JTable();
        bt_search = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bg_blue.setBackground(new java.awt.Color(140, 122, 230));
        bg_blue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bg_blueMouseClicked(evt);
            }
        });

        bt_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        bt_add.setText("tambah");
        bt_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_addActionPerformed(evt);
            }
        });

        bt_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        bt_update.setText("perbarui");
        bt_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_updateActionPerformed(evt);
            }
        });

        bt_del.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        bt_del.setText("hapus");
        bt_del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_delActionPerformed(evt);
            }
        });

        bt_logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logout.png"))); // NOI18N
        bt_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_logoutActionPerformed(evt);
            }
        });

        bt_exit.setBackground(new java.awt.Color(140, 122, 230));
        bt_exit.setForeground(new java.awt.Color(140, 122, 230));
        bt_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/exit.png"))); // NOI18N
        bt_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_exitActionPerformed(evt);
            }
        });

        bt_minimaze.setBackground(new java.awt.Color(140, 122, 230));
        bt_minimaze.setForeground(new java.awt.Color(140, 122, 230));
        bt_minimaze.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/minimaze.png"))); // NOI18N
        bt_minimaze.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_minimazeActionPerformed(evt);
            }
        });

        lbnopar.setText("nomor parkir");

        lbnopol.setText("nomor polisi");

        lbmanufak.setText("manufaktur");

        lbjenis.setText("jenis");

        lbwarna.setText("warna");

        lbtransmisi.setText("transmisi");

        lbharga.setText("harga");

        lbstatus.setText("status");

        tampilanTabelDataParkir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Parkir", "Nomor Polisi", "Manufaktur", "Jenis", "Warna", "Transmisi", "Harga", "Status"
            }
        ));
        tampilanTabelDataParkir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tampilanTabelDataParkirMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tampilanTabelDataParkir);

        bt_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/find.png"))); // NOI18N
        bt_search.setText("cari");
        bt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_searchActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Parkir", "Nomor Polisi", "Manufaktur", "Jenis", "Warna", "Transmisi", "Harga", "Status"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabel);

        javax.swing.GroupLayout bg_blueLayout = new javax.swing.GroupLayout(bg_blue);
        bg_blue.setLayout(bg_blueLayout);
        bg_blueLayout.setHorizontalGroup(
            bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg_blueLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bt_minimaze, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(bg_blueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bg_blueLayout.createSequentialGroup()
                        .addComponent(bt_update)
                        .addGap(82, 82, 82)
                        .addComponent(bt_del)
                        .addGap(167, 167, 167)
                        .addComponent(bt_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_add))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bg_blueLayout.createSequentialGroup()
                        .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(bg_blueLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(bg_blueLayout.createSequentialGroup()
                                        .addComponent(lbjenis)
                                        .addGap(43, 43, 43))
                                    .addGroup(bg_blueLayout.createSequentialGroup()
                                        .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lbmanufak)
                                            .addComponent(lbnopol))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(injenis, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(innopol)
                                    .addComponent(inmanufaktur))
                                .addGap(76, 76, 76)
                                .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbharga)
                                    .addComponent(lbwarna)
                                    .addComponent(lbstatus)))
                            .addGroup(bg_blueLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lbnopar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(innopar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                                .addComponent(lbtransmisi)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(intransmisi, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(inwarna)
                            .addComponent(inharga)
                            .addComponent(instatus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 463, Short.MAX_VALUE)
                        .addComponent(bt_logout))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        bg_blueLayout.setVerticalGroup(
            bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg_blueLayout.createSequentialGroup()
                .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bg_blueLayout.createSequentialGroup()
                        .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bt_minimaze, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(bt_logout)
                        .addGap(14, 14, 14)
                        .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbnopar)
                            .addComponent(innopar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbtransmisi)
                        .addComponent(intransmisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbnopol, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(innopol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbwarna, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(inwarna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbmanufak)
                    .addComponent(lbharga)
                    .addComponent(inharga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inmanufaktur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbjenis)
                    .addComponent(injenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbstatus)
                    .addComponent(instatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bg_blueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(bt_del, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_update, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(bt_search, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_blue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg_blue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void bt_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_addActionPerformed
        // TODO add your handling code here:
        try{
            String cekNo = innopar.getText();
            String cekNop = innopol.getText();
            String cekMan = inmanufaktur.getText();
            String cekJen = injenis.getText();
            String cekWar = inwarna.getText();
            String cekTra = intransmisi.getText();
            String cekHa = inharga.getText();
            String cekSta = instatus.getText();
            int idno = varLok.cariDengan(dataParkirArrayList, innopar.getText());
            if(idno == -1) {
                if(cekNo.isEmpty()  || cekNop.isEmpty() || cekMan.isEmpty() || cekJen.isEmpty() || cekWar.isEmpty() || cekTra.isEmpty() || cekHa.isEmpty() || cekSta.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Anda memasukkan data kurang lengkap");
                }else{
                //dataParkirArrayList.add(new Sistem(innopar.getText(), innopol.getText(), inmanufaktur.getText(), injenis.getText(), inwarna.getText(), intransmisi.getText(), inharga.getText(), instatus.getText()));
                dataParkirArrayList.add(idno, new Sistem(cekNo, cekNop, cekMan, cekJen, cekWar, cekTra, cekHa, cekSta));
                varLok.tambahDataParkir();
                JOptionPane.showMessageDialog(this, "Data berhasil ditambah!");
                menampilkanData();
                }
            }else {
                JOptionPane.showMessageDialog(this, "Data gagal ditambah: Nomer parkir tersedia!"+innopar);
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
        membersihkanField();
    }//GEN-LAST:event_bt_addActionPerformed

    private void bt_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_updateActionPerformed
        // TODO add your handling code here:
//        int row=0;
//        DefaultTableModel tabelDataParkir = (DefaultTableModel) tampilanTabelDataParkir.getModel();
//        String cekNo = innopar.getText();
//        String cekNop = innopol.getText();
//        String cekMan = inmanufaktur.getText();
//        String cekJen = injenis.getText();
//        String cekWar = inwarna.getText();
//        String cekTra = intransmisi.getText();
//        String cekHa = inharga.getText();
//        String cekSta = instatus.getText();
//        dataParkirArrayList.get(row).setNoParkir(cekNo);
//        dataParkirArrayList.get(row).setNopol(cekNop);
//        dataParkirArrayList.get(row).setManufaktur(cekMan);
//        dataParkirArrayList.get(row).setJenis(cekJen);
//        dataParkirArrayList.get(row).setWarna(cekWar);
//        dataParkirArrayList.get(row).setTransmisi(cekTra);
//        dataParkirArrayList.get(row).setHarga(cekHa);
//        dataParkirArrayList.get(row).setStatus(cekSta);
//        tabelDataParkir.setRowCount(0);
//        for(int i = 0; i < dataParkirArrayList.size(); i++){
//            Object[] objs = {dataParkirArrayList.get(i).getNoParkir(), dataParkirArrayList.get(i).getNopol(), dataParkirArrayList.get(i).getManufaktur(), dataParkirArrayList.get(i).getJenis(), dataParkirArrayList.get(i).getWarna(), dataParkirArrayList.get(i).getTransmisi(), dataParkirArrayList.get(i).getHarga(), dataParkirArrayList.get(i).getStatus()};
//            tabelDataParkir.addRow(objs);
//        }
        
        DefaultTableModel tabelDataParkir = (DefaultTableModel) tampilanTabelDataParkir.getModel();
        
        String cekNo = innopar.getText();
        String cekNop = innopol.getText();
        String cekMan = inmanufaktur.getText();
        String cekJen = injenis.getText();
        String cekWar = inwarna.getText();
        String cekTra = intransmisi.getText();
        String cekHa = inharga.getText();
        String cekSta = instatus.getText();
        try{
            int idno = varLok.cariDengan(dataParkirArrayList, innopar.getText());
            int tab = tampilanTabelDataParkir.getSelectedRow();
            JOptionPane.showMessageDialog(this, idno);
            if(idno >= 0 ){
                dataParkirArrayList.set(idno, new Sistem(innopar.getText(), innopol.getText(), inmanufaktur.getText(), injenis.getText(), inwarna.getText(), intransmisi.getText(), inharga.getText(), instatus.getText()));
//                varLok.tambahDataParkir();
                JOptionPane.showMessageDialog(this, "Data berhasil diperbarui");
            }else{
                JOptionPane.showMessageDialog(this, "Data gagal diperbarui");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
        membersihkanField();
        innopol.setEditable(true);

//        try{
//            String cekNo = innopar.getText();
//            String cekNop = innopol.getText();
//            String cekMan = inmanufaktur.getText();
//            String cekJen = injenis.getText();
//            String cekWar = inwarna.getText();
//            String cekTra = intransmisi.getText();
//            String cekHa = inharga.getText();
//            String cekSta = instatus.getText();
//            
//            int i;
//            for(i = 0; i < dataParkirArrayList.size(); i++){
//                if(cekNo.isEmpty() || cekNop.isEmpty() || cekMan.isEmpty() || cekJen.isEmpty() || cekWar.isEmpty() || cekTra.isEmpty() || cekHa.isEmpty() || cekSta.isEmpty()){
//                    JOptionPane.showMessageDialog(this, "Anda memasukkan data kurang lengkap");
//                }else{
//                //dataParkirArrayList.set(idnopar, new Sistem(innopar.getText(), innopol.getText(), inmanufaktur.getText(), injenis.getText(), inwarna.getText(), intransmisi.getText(), inharga.getText(), instatus.getText()));
//                dataParkirArrayList.get(i).setNoParkir(cekNo);
//                dataParkirArrayList.get(i).setNopol(cekNop);
//                dataParkirArrayList.get(i).setManufaktur(cekMan);
//                dataParkirArrayList.get(i).setJenis(cekJen);
//                dataParkirArrayList.get(i).setWarna(cekWar);
//                dataParkirArrayList.get(i).setTransmisi(cekTra);
//                dataParkirArrayList.get(i).setHarga(cekHa);
//                dataParkirArrayList.get(i).setStatus(cekSta);
//                varLok.tambahDataParkir();
//                JOptionPane.showMessageDialog(this, "Data berhasil diupdate!");
//                break;                
//                }
//            }
//            menampilkanData();
//        }catch (Exception e){
//            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
//        }
//        membersihkanField();
//        innopar.setEditable(true);
    }//GEN-LAST:event_bt_updateActionPerformed

    private void bg_blueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bg_blueMouseClicked
        // TODO add your handling code here:
        bt_update.setVisible(false);
        bt_del.setVisible(false);
        tampilanTabelDataParkir.setEnabled(true);
        membersihkanField();
        menampilkanData();
    }//GEN-LAST:event_bg_blueMouseClicked

    private void bt_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_logoutActionPerformed
        // TODO add your handling code here:
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        dispose();
        formLogin loginPage = new formLogin();
        loginPage.setVisible(true);
    }//GEN-LAST:event_bt_logoutActionPerformed

    private void bt_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_exitActionPerformed
        // TODO add your handling code here:
        int respon = JOptionPane.showConfirmDialog(this, "Apakah anda ingin keluar dari program?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(respon == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_bt_exitActionPerformed

    private void bt_minimazeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_minimazeActionPerformed
        // TODO add your handling code here:
        this.setExtendedState(JFrame.ICONIFIED);
    }//GEN-LAST:event_bt_minimazeActionPerformed

    private void bt_delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_delActionPerformed
        // TODO add your handling code here:
        try{
            int idnopol = varLok.cariDengan(dataParkirArrayList, innopar.getText());
            int del = JOptionPane.showConfirmDialog(this, "Apakah anda ingin menghapus data?", "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(del == 0){
                if(idnopol >= 0){
                    dataParkirArrayList.remove(idnopol);
                    varLok.tambahDataParkir();
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                    menampilkanData();
                }else{
                    JOptionPane.showMessageDialog(this, "Data gagal dihapus!", "", JOptionPane.CANCEL_OPTION);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Data gagal dihapus", "", JOptionPane.CANCEL_OPTION);
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
        membersihkanField();
        innopar.setEditable(true);
    }//GEN-LAST:event_bt_delActionPerformed

    private void tampilanTabelDataParkirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tampilanTabelDataParkirMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tabelDataParkir = (DefaultTableModel) tampilanTabelDataParkir.getModel();
        bt_update.setVisible(true);
        bt_del.setVisible(true);
        int ambilData = tampilanTabelDataParkir.getSelectedRow();
        innopar.setText(dataParkirArrayList.get(ambilData).getNoParkir());
        innopol.setText(dataParkirArrayList.get(ambilData).getNopol());
        inmanufaktur.setText(dataParkirArrayList.get(ambilData).getManufaktur());
        injenis.setText(dataParkirArrayList.get(ambilData).getJenis());
        inwarna.setText(dataParkirArrayList.get(ambilData).getWarna());
        intransmisi.setText(dataParkirArrayList.get(ambilData).getTransmisi());
        inharga.setText(dataParkirArrayList.get(ambilData).getHarga());
        instatus.setText(dataParkirArrayList.get(ambilData).getStatus());
        menampilkanData();
    }//GEN-LAST:event_tampilanTabelDataParkirMouseClicked

    private void bt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_searchActionPerformed
        // TODO add your handling code here:
//        Sistem temp = new Sistem();
//        String inNop = JOptionPane.showInputDialog(this, "Masukkan Kode Parkir:");
//        bt_add.setVisible(true);
//        bt_update.setVisible(true);
//        int i;
//        for (i = 0; i < dataParkirArrayList.size(); i++) {
//            if(dataParkirArrayList.get(i).getNoParkir().equals(inNop)){
//                temp = dataParkirArrayList.get(i);
//                JOptionPane.showMessageDialog(this, "Data Ditemukan", "Mencari Kode Parkir",2);
//                innopar.setText(dataParkirArrayList.get(i).getNoParkir());
//                innopol.setText(dataParkirArrayList.get(i).getNopol());
//                inmanufaktur.setText(dataParkirArrayList.get(i).getManufaktur());
//                injenis.setText(dataParkirArrayList.get(i).getJenis());
//                inwarna.setText(dataParkirArrayList.get(i).getWarna());
//                intransmisi.setText(dataParkirArrayList.get(i).getTransmisi());
//                inharga.setText(dataParkirArrayList.get(i).getHarga());
//                instatus.setText(dataParkirArrayList.get(i).getStatus());
//            }else{
//                JOptionPane.showMessageDialog(this, "Data tidak ditemukan", "Mencari Kode Parkir",2); 
//                break;
//            }
//        }
        
        Sistem temp = new Sistem();
        String inNop = JOptionPane.showInputDialog(this, "Masukkan Kode Parkir:");
        bt_add.setVisible(true);
        bt_update.setVisible(true);
        int i;
        for (i = 0; i < dataParkirArrayList.size(); i++) {
            if(dataParkirArrayList.get(i).getNoParkir().equals(inNop)){
                temp = dataParkirArrayList.get(i);
                JOptionPane.showMessageDialog(this, "Data Ditemukan", "Mencari Kode Parkir",2);
                innopar.setText(dataParkirArrayList.get(i).getNoParkir());
                innopol.setText(dataParkirArrayList.get(i).getNopol());
                inmanufaktur.setText(dataParkirArrayList.get(i).getManufaktur());
                injenis.setText(dataParkirArrayList.get(i).getJenis());
                inwarna.setText(dataParkirArrayList.get(i).getWarna());
                intransmisi.setText(dataParkirArrayList.get(i).getTransmisi());
                inharga.setText(dataParkirArrayList.get(i).getHarga());
                instatus.setText(dataParkirArrayList.get(i).getStatus());
            }else{
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan", "Mencari Kode Parkir",2); 
                break;
            }
        }
    }//GEN-LAST:event_bt_searchActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        // TODO add your handling code here:
        bt_update.setVisible(true);
        bt_del.setVisible(true);
        int ambilData = tabel.getSelectedRow();
        innopar.setText(dataParkirArrayList.get(ambilData).getNoParkir());
        innopol.setText(dataParkirArrayList.get(ambilData).getNopol());
        inmanufaktur.setText(dataParkirArrayList.get(ambilData).getManufaktur());
        injenis.setText(dataParkirArrayList.get(ambilData).getJenis());
        inwarna.setText(dataParkirArrayList.get(ambilData).getWarna());
        intransmisi.setText(dataParkirArrayList.get(ambilData).getTransmisi());
        inharga.setText(dataParkirArrayList.get(ambilData).getHarga());
        instatus.setText(dataParkirArrayList.get(ambilData).getStatus());
        menampilkanData();
    }//GEN-LAST:event_tabelMouseClicked

    public void menampilkanData(){
        DefaultTableModel tabelDataParkir = (DefaultTableModel) tampilanTabelDataParkir.getModel();
        tabelDataParkir.setRowCount(0);
        
        //tabel nisor
        DefaultTableModel tabelData = (DefaultTableModel) tabel.getModel();
//        tabelData.removeRow(0);
        
//        while(tabelDataParkir.getRowCount() > 0){
//            for (int i = 0; i < tabelDataParkir.getRowCount(); i++) {
//                tabelDataParkir.removeRow(i);
//            }
//        }
        Object[] barisAtribut = new Object[8];
            int i = 0;
            for (; i < dataParkirArrayList.size(); i++) {
                barisAtribut[0] = dataParkirArrayList.get(i).getNoParkir();
                barisAtribut[1] = dataParkirArrayList.get(i).getNopol();
                barisAtribut[2] = dataParkirArrayList.get(i).getManufaktur();
                barisAtribut[3] = dataParkirArrayList.get(i).getJenis();
                barisAtribut[4] = dataParkirArrayList.get(i).getWarna();
                barisAtribut[5] = dataParkirArrayList.get(i).getTransmisi();
                barisAtribut[6] = dataParkirArrayList.get(i).getHarga();
                barisAtribut[7] = dataParkirArrayList.get(i).getStatus();
                tabelDataParkir.addRow(barisAtribut);
            }
            
        //tabel nisor
        Object[] barisAtribut2 = new Object[8];
        int j = 0;
        for (; j < dataParkirArrayList.size(); j++) {
            barisAtribut2[0] = dataParkirArrayList.get(j).getNoParkir();
            barisAtribut2[1] = dataParkirArrayList.get(j).getNopol();
            barisAtribut2[2] = dataParkirArrayList.get(j).getManufaktur();
            barisAtribut2[3] = dataParkirArrayList.get(j).getJenis();
            barisAtribut2[4] = dataParkirArrayList.get(j).getWarna();
            barisAtribut2[5] = dataParkirArrayList.get(j).getTransmisi();
            barisAtribut2[6] = dataParkirArrayList.get(j).getHarga();
            barisAtribut2[7] = dataParkirArrayList.get(j).getStatus();
            tabelData.addRow(barisAtribut2);
        }
    }
    
    public void membersihkanField(){
        innopar.setText("");
        innopol.setText("");
        inmanufaktur.setText("");
        injenis.setText("");
        inwarna.setText("");
        intransmisi.setText("");
        inharga.setText("");
        instatus.setText("");
    }
    
    public static void main(String[] args) {
        new formParkir().setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg_blue;
    private javax.swing.JButton bt_add;
    private javax.swing.JButton bt_del;
    private javax.swing.JButton bt_exit;
    private javax.swing.JButton bt_logout;
    private javax.swing.JButton bt_minimaze;
    private javax.swing.JButton bt_search;
    private javax.swing.JButton bt_update;
    private javax.swing.JTextField inharga;
    private javax.swing.JTextField injenis;
    private javax.swing.JTextField inmanufaktur;
    private javax.swing.JTextField innopar;
    private javax.swing.JTextField innopol;
    private javax.swing.JTextField instatus;
    private javax.swing.JTextField intransmisi;
    private javax.swing.JTextField inwarna;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbharga;
    private javax.swing.JLabel lbjenis;
    private javax.swing.JLabel lbmanufak;
    private javax.swing.JLabel lbnopar;
    private javax.swing.JLabel lbnopol;
    private javax.swing.JLabel lbstatus;
    private javax.swing.JLabel lbtransmisi;
    private javax.swing.JLabel lbwarna;
    private javax.swing.JTable tabel;
    public javax.swing.JTable tampilanTabelDataParkir;
    // End of variables declaration//GEN-END:variables
}
